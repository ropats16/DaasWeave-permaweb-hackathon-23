import Emitter from 'arweave-wallet-connector/lib/utils/Emitter.js';
import type { Emitting as InternalBridgeMap } from 'arweave-wallet-connector/lib/browser/Bridge.js';
import type { Connection, AppInfo, PostMessageOptions, Flatten, UnionToIntersection, ProtocolInfo } from 'arweave-wallet-connector/lib/types.js';
declare type BridgeMap = Flatten<UnionToIntersection<InternalBridgeMap['builtin']>>;
declare type Emitting = BridgeMap & {
    connect: string;
    disconnect: undefined;
    change: string | undefined;
};
export default class BrowserConnector extends Emitter<Emitting> implements Connection {
    private static _bridges;
    private _appInfo?;
    private _bridge?;
    private _url?;
    private _session;
    private _address?;
    private _listener;
    private _emitterPassthrough;
    get address(): string | undefined;
    private setAddress;
    get connected(): boolean;
    get url(): string | undefined;
    get showIframe(): boolean;
    get usePopup(): boolean;
    get requirePopup(): boolean;
    get keepPopup(): boolean;
    set keepPopup(keep: boolean);
    constructor(appInfo?: AppInfo, connectToUrl?: string | URL);
    setUrl(connectToUrl: string | URL): void;
    connect(options?: object): Promise<string>;
    disconnect(options?: object): Promise<void>;
    private disconnectEvent;
    postMessage(method: string, params?: any[], options?: PostMessageOptions & ProtocolInfo): Promise<unknown>;
}
export {};
