{"version":3,"file":"Connector.js","sourceRoot":"","sources":["../../src/browser/Connector.ts"],"names":[],"mappings":"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","sourcesContent":["import Bridge from './Bridge.js'\r\nimport Emitter from '../utils/Emitter.js'\r\nimport { generateUrl } from '../utils/Utils.js'\r\nimport { load, unload } from '../utils/Inject.js'\r\nimport { windowMissing } from '../utils/Errors.js'\r\nimport { is } from 'typescript-is'\r\nimport type { Emitting as InternalBridgeMap } from './Bridge.js'\r\nimport type { Connection, AppInfo, PostMessageOptions, Flatten, UnionToIntersection, ProtocolInfo } from '../types'\r\n\r\n\r\n\r\ntype BridgeMap = Flatten<UnionToIntersection<InternalBridgeMap['builtin']>>\r\ntype Emitting = BridgeMap & {\r\n\tconnect: string\r\n\tdisconnect: undefined\r\n\tchange: string | undefined\r\n}\r\n\r\n// todo disable multiple instances\r\n\r\nexport default class BrowserConnector extends Emitter<Emitting> implements Connection {\r\n\tprivate static _bridges: { [url: string]: { bridge: Bridge, sessions: number[] } } = {}\r\n\tprivate _appInfo?: AppInfo\r\n\tprivate _bridge?: Bridge\r\n\tprivate _url?: URL\r\n\tprivate _session = 0\r\n\tprivate _address?: string\r\n\tprivate _listener = (message: InternalBridgeMap['message']) => {\r\n\t\tconst { method, params, session } = message\r\n\t\tif (session != null && this._session != session) { return }\r\n\t\tif (!session && this._session) { return }\r\n\t\tif (method === 'connect') {\r\n\t\t\tif (!is<string>(params)) { return }\r\n\t\t\tthis.setAddress(params)\r\n\t\t}\r\n\t\tif (method === 'disconnect') { this.disconnectEvent(false) }\r\n\t}\r\n\tprivate _emitterPassthrough\r\n\r\n\tget address() { return this._address }\r\n\tprivate setAddress(value?: string) {\r\n\t\tif (value && value === this.address) { return }\r\n\t\tthis._address = value\r\n\t\tvalue != null ? this.emit('connect', value) : this.emit('disconnect', value)\r\n\t\tthis.emit('change', value)\r\n\t}\r\n\tget connected() { return this._address != null }\r\n\tget url() { return this._bridge?.url }\r\n\tget showIframe() { return this._bridge?.showIframe || false }\r\n\tget usePopup() { return this._bridge?.usePopup || false }\r\n\tget requirePopup() { return this._bridge?.requirePopup || false }\r\n\tget keepPopup() { return this._bridge?.keepPopup || false }\r\n\tset keepPopup(keep: boolean) { this._bridge && (this._bridge.keepPopup = keep) }\r\n\r\n\tconstructor(appInfo?: AppInfo, connectToUrl?: string | URL) {\r\n\t\tsuper()\r\n\t\tthis._appInfo = appInfo\r\n\r\n\t\tthis._emitterPassthrough = <T extends keyof BridgeMap>(param: InternalBridgeMap['builtin']) => {\r\n\t\t\tconst event = Object.entries(param)[0] as [T, BridgeMap[T]]\r\n\t\t\tthis.emit(event[0], event[1])\r\n\t\t}\r\n\t\tthis.on('connect', () => load(this as any))\r\n\t\tthis.on('disconnect', () => unload(this as any))\r\n\t\tif (connectToUrl) { this.setUrl(connectToUrl) }\r\n\t}\r\n\r\n\tsetUrl(connectToUrl: string | URL) {\r\n\t\tif (!window) { console.error(windowMissing); return }\r\n\t\tconst oldBridge = this._bridge\r\n\t\tconst url = generateUrl(connectToUrl)\r\n\t\tthis._url = url\r\n\t\tif (this._bridge?.url === url.origin) { return }\r\n\t\tthis.disconnect()\r\n\t\tif (!BrowserConnector._bridges[url.origin]) {\r\n\t\t\tthis._bridge = new Bridge(url, this._appInfo)\r\n\t\t\tBrowserConnector._bridges[url.origin] = { bridge: this._bridge, sessions: [] }\r\n\t\t} else {\r\n\t\t\tthis._bridge = BrowserConnector._bridges[url.origin].bridge\r\n\t\t\tconst sessions = BrowserConnector._bridges[url.origin].sessions\r\n\t\t\tfor (let i = 0; i <= sessions.length; i++) { if (sessions.indexOf(i) < 0) { this._session = i; break } }\r\n\t\t}\r\n\t\tBrowserConnector._bridges[url.origin].sessions.push(this._session)\r\n\t\tthis._bridge.on('message', this._listener)\r\n\t\tthis._bridge.on('builtin', this._emitterPassthrough)\r\n\t\tif (this._bridge.showIframe !== oldBridge?.showIframe) { this.emit('showIframe', this._bridge.showIframe) }\r\n\t\tif (this._bridge.usePopup !== oldBridge?.usePopup) { this.emit('usePopup', this._bridge.usePopup) }\r\n\t\tif (this._bridge.requirePopup !== oldBridge?.requirePopup) { this.emit('requirePopup', this._bridge.requirePopup) }\r\n\t\tif (this._bridge.keepPopup !== oldBridge?.keepPopup) { this.emit('keepPopup', this._bridge.keepPopup) }\r\n\t}\r\n\r\n\tasync connect(options?: object): Promise<string> {\r\n\t\tif (!this._bridge) { this._url && this.setUrl(this._url) }\r\n\t\tconst promise = new Promise<string>((resolve, reject) => {\r\n\t\t\tthis.once('change', address => address ? resolve(address) : reject())\r\n\t\t}).finally(() => this._bridge?.completeRequest())\r\n\t\tthis._bridge!.deliverMessage({ method: 'connect', params: options })\r\n\t\treturn promise\r\n\t}\r\n\r\n\tasync disconnect(options?: object) { return this.disconnectEvent(true, options) }\r\n\r\n\tprivate async disconnectEvent(fromMethod: boolean, options?: object) {\r\n\t\tif (!this._bridge) { return }\r\n\t\tconst oldBridge = this._bridge\r\n\t\tconst session = this._session\r\n\t\tconst url = oldBridge.url\r\n\t\tthis.setAddress(undefined)\r\n\t\tthis._bridge = undefined\r\n\t\tthis._session = 0\r\n\t\tif (fromMethod) {\r\n\t\t\t// todo add timeout\r\n\t\t\ttry { await oldBridge.postMessage({ method: 'disconnect', params: [options], session }) }\r\n\t\t\tcatch (e) { console.warn('disconnect request failed') }\r\n\t\t}\r\n\t\toldBridge.off('message', this._listener)\r\n\t\toldBridge.off('builtin', this._emitterPassthrough)\r\n\t\tBrowserConnector._bridges[url].sessions = BrowserConnector._bridges[url].sessions.filter(x => x != session)\r\n\t\tsetTimeout(() => {\r\n\t\t\tif (BrowserConnector._bridges[url].sessions.length) { return }\r\n\t\t\tBrowserConnector._bridges[url].bridge.destructor()\r\n\t\t\tdelete BrowserConnector._bridges[url]\r\n\t\t}, 100)\r\n\t}\r\n\r\n\tpostMessage(method: string, params?: any[], options?: PostMessageOptions & ProtocolInfo) {\r\n\t\treturn new Promise((resolve, reject) => {\r\n\t\t\tif (!this._bridge) { return reject('URL missing') }\r\n\t\t\tthis.once('disconnect', reject)\r\n\t\t\tthis._bridge.postMessage({ method, params, session: this._session, protocol: options?.protocol, version: options?.version }, options).then(resolve).catch(reject)\r\n\t\t})\r\n\t}\r\n}"]}